/* vim:syntax=c
 */
#include "cyclic.h"
#include "global.h"
#include "interpret.h"
#include "mapping.h"
#include "module.h"
#include "pike_error.h"
#include "pike_float.h"
#include "pike_types.h"
#include "stralloc.h"
#include "svalue.h"
#include "array.h"
#include "operators.h"
#include "builtin_functions.h"

#ifdef cmod___CMOD__

#define CB_SOURCE
#define CB_STATIC
#define CB_INLINE
#define CB_NAMESPACE

#include "critbit/string2svalue.h"

/* this is only used in pike code! */
#define CB_PRINT_CHAR(buf, str, n)			\
    do { string_builder_sprintf((buf), "%c", CB_GET_CHAR(str, n)); } while(0)

#define CB_PRINT_KEY(buf, key)				\
	do { string_builder_shared_strcat((buf), (key).str); } while(0)

static inline void cb_assign_svalue_key_string(cb_key key,
					       struct svalue * s) {
    if ((ptrdiff_t)key.len.chars == key.str->len) {
	add_ref(key.str);
	SET_SVAL(*s, PIKE_T_STRING, 0, string, key.str);
    } else {
	struct pike_string * prefix = string_slice(key.str, 0, key.len.chars);
	SET_SVAL(*s, PIKE_T_STRING, 0, string, prefix);
    }
}

#define CB_LOW_ASSIGN_SVALUE_KEY(node, s) cb_assign_svalue_key_string(node, s)
#define CB_PUSH_KEY(key)	ref_push_string((key).str)
#define CB_PUSH_STRING(str)	ref_push_string(str)
#define CB_STRING_FROM_SVALUE(v)	((v)->u.string)
#define CB_LOW_KEY_FROM_SVALUE(v)	CB_KEY_FROM_STRING(CB_STRING_FROM_SVALUE(v))
#define CB_USE_BLOCK_ALLOC
#ifdef CB_USE_BLOCK_ALLOC
# undef BLOCK_ALLOC_NEXT
# define BLOCK_ALLOC_NEXT	parent
# include "block_allocator.h"

BLOCK_ALLOC_FILL_PAGES(cb_node, 2)
# define CB_NODE_ALLOC()	CONCAT2(alloc_,CB_NAME(node))()
# define CB_NODE_FREE(x)	CONCAT2(really_free_,CB_NAME(node))(x)
#endif

#include "tree_high.c"

#define DEFAULT_CMOD_STORAGE static

DECLARATIONS

/*! @module ADT */
/*! @module CritBit */

PIKECLASS StringTree {
#cmod_define iterator_class Iterator
#cmod_define tree_class StringTree
#cmod_define cmod_OBJ2_TREE OBJ2_STRINGTREE
#cmod_define T_KEY PIKE_T_STRING
#cmod_define key_ptype string
#cmod_define sval_type string
#cmod_define sample_key "foo"
#cmod_define sample_keys ({ "fooo", "bar", "ahead" })
#cmod_define ordered_keys "ahead", "bar" and "foo"
#cmod_define reverse_ordered_keys "foo", "bar" and "ahead"
#cmod_define sample_value ({ 7, 8, 9 })
#cmod_define extra_doc
#cmod_include "redefine.H"

#cmod_include "tree_header.H"
#cmod_include "iterator_source.H"
#undef THIS
#define THIS THIS_STRINGTREE
#cmod_include "prefix.H"
#cmod_include "tree_source.H"
}

/*! @endmodule */
/*! @endmodule */

void pike_init_tree_module(void) {
#ifdef CB_USE_BLOCK_ALLOC
    CONCAT3(init_, cb_node, _blocks)();
#endif
    INIT
}

void pike_exit_tree_module(void) {
    EXIT
}

#else
void pike_init_tree_module(void) {
    add_integer_constant("this_program_does_not_exist", 1, 0);
}
void pike_exit_tree_module(void) {}
#endif
